// <auto-generated />
using System;
using AppLivros.API.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AppLivros.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210823001458_TabelaLivro")]
    partial class TabelaLivro
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AppLivros.API.Models.Autor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime>("Nascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("UltimoNome")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Autores");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ab1bae25-c081-493e-b7f6-99cd738b057d"),
                            Email = "rafa@gmail.com",
                            Nascimento = new DateTime(2008, 5, 1, 8, 30, 52, 0, DateTimeKind.Unspecified),
                            Nome = "Rafael",
                            UltimoNome = "Silva"
                        },
                        new
                        {
                            Id = new Guid("95b4ccc7-0257-4773-a0d1-caa006c53779"),
                            Email = "rafa@gmail.com",
                            Nascimento = new DateTime(2008, 5, 1, 8, 30, 52, 0, DateTimeKind.Unspecified),
                            Nome = "Rafaaa",
                            UltimoNome = "Silva"
                        },
                        new
                        {
                            Id = new Guid("b586dcf4-f7ae-4d03-9bc6-2b6e4b91e9d1"),
                            Email = "rafa@gmail.com",
                            Nascimento = new DateTime(2008, 5, 1, 8, 30, 52, 0, DateTimeKind.Unspecified),
                            Nome = "Leafar",
                            UltimoNome = "Silva"
                        });
                });

            modelBuilder.Entity("AppLivros.API.Models.Livro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Ano")
                        .HasMaxLength(4)
                        .HasColumnType("int");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Livros");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6514a73e-7202-43c8-a72d-da356c1f52df"),
                            Ano = 2000,
                            ISBN = "8535902775",
                            Titulo = "C# é legal"
                        },
                        new
                        {
                            Id = new Guid("ee06cd80-469c-4a5f-9278-c00b6fdac362"),
                            Ano = 1997,
                            ISBN = "8535902775",
                            Titulo = ".NET é legal"
                        },
                        new
                        {
                            Id = new Guid("200fdbf5-3343-4325-b19d-a727645062a2"),
                            Ano = 1998,
                            ISBN = "8535902775",
                            Titulo = "SQL Server é legal"
                        });
                });

            modelBuilder.Entity("AutorLivro", b =>
                {
                    b.Property<Guid>("AutoresId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LivrosId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AutoresId", "LivrosId");

                    b.HasIndex("LivrosId");

                    b.ToTable("AutorLivro");
                });

            modelBuilder.Entity("AutorLivro", b =>
                {
                    b.HasOne("AppLivros.API.Models.Autor", null)
                        .WithMany()
                        .HasForeignKey("AutoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppLivros.API.Models.Livro", null)
                        .WithMany()
                        .HasForeignKey("LivrosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
